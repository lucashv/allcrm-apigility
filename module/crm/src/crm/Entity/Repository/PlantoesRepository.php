<?php

namespace crm\Entity\Repository;
use crm\V1\Rest\DateTime\DateTime;

/**
 * PlantoesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlantoesRepository extends \Doctrine\ORM\EntityRepository
{

    protected $hoje;
    protected $hojeSemHora;
    protected $con;


    private function getEm()
    {
        return $this->getEntityManager();
    }

    public function delete($idTipo)
    {
        $this->init();

        $sql = "UPDATE
                  plantoes
                SET
                status = 0,
                data_edicao = :hoje
                WHERE
                 tipos_plantoes_id = :tipo";

        if($idTipo == 1)
        {

            $sql .= " AND
                    data_criacao BETWEEN '{$this->hojeSemHora} 08:00:00' AND '{$this->hojeSemHora} 23:59:59' ";
        }

        $params = array('hoje'=> $this->hoje,'tipo' => $idTipo);

        try {
            $stmt = $this->con->executeQuery($sql, $params);
            return true;
        } catch (\PDOException $e) {
             echo $e->getMessage();
            return false;
        }

    }

    public function getCorretoresTodosPlantoes()
    {

        $this->init();


        $sql = "SELECT
                      p.*,
                      u.*
                FROM
                     plantoes as p
                JOIN
                usuarios as u
                ON p.usuario_corretor_id = u.id
                WHERE
                  p.data_criacao
                BETWEEN '{$this->hojeSemHora} 08:00:00'
                AND     '{$this->hojeSemHora} 23:59:59'
                AND p.status = true
                ORDER BY p.ultimo_envio, p.posicao DESC ";

        try {
            $stmt = $this->con->executeQuery($sql);
            return $stmt;
        } catch (\PDOException $e) {
             echo $e->getMessage();
            return false;
        }

    }

    private function init()
    {
        $this->hoje        =  DateTime::getDataAtualMySql(true);
        $this->hojeSemHora =  DateTime::getDataAtualMySql();
        $this->con = $this->getEm()->getConnection();
    }

    public function getByPosicao( $parametros) {
        $this->init();

        $posicao = $parametros->termo;


        $sql = "SELECT
                 *
                FROM
                 plantoes
                WHERE
                  posicao = {$posicao}
                AND data_criacao
                BETWEEN '{$this->hojeSemHora} 08:00:00'
                AND     '{$this->hojeSemHora} 23:59:59'
                AND status = true
                ";


        if($parametros->tipoPlantao != 1) {
            $sql = "SELECT
                 *
                FROM
                 plantoes
                WHERE
                  posicao = {$posicao}
                AND status = true
                ";
        }

        //die(var_dump($sql));

        try {
            $stmt = $this->con->executeQuery($sql);
            return $stmt;
        } catch (\PDOException $e) {
            echo $e->getMessage();
            return false;
        }
    }




}
