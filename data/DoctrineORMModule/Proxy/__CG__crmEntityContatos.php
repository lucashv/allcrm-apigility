<?php

namespace DoctrineORMModule\Proxy\__CG__\crm\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contatos extends \crm\Entity\Contatos implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'nome', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'idade', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'observacao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'dataCriacao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'dataEdicao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'status', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'empresa', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'operadora', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'numeroPessoasEmpresas', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'interesse', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'enviarPara'];
        }

        return ['__isInitialized__', 'id', 'nome', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'idade', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'observacao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'dataCriacao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'dataEdicao', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'status', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'empresa', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'operadora', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'numeroPessoasEmpresas', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'interesse', '' . "\0" . 'crm\\Entity\\Contatos' . "\0" . 'enviarPara'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contatos $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getInteresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInteresse', []);

        return parent::getInteresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setInteresse($interesse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInteresse', [$interesse]);

        return parent::setInteresse($interesse);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', []);

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', [$nome]);

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdade', []);

        return parent::getIdade();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdade($idade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdade', [$idade]);

        return parent::setIdade($idade);
    }

    /**
     * {@inheritDoc}
     */
    public function getObservacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObservacao', []);

        return parent::getObservacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setObservacao($observacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObservacao', [$observacao]);

        return parent::setObservacao($observacao);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataCriacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataCriacao', []);

        return parent::getDataCriacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataCriacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataCriacao', []);

        return parent::setDataCriacao();
    }

    /**
     * {@inheritDoc}
     */
    public function getDataEdicao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataEdicao', []);

        return parent::getDataEdicao();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataEdicao($dataEdicao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataEdicao', [$dataEdicao]);

        return parent::setDataEdicao($dataEdicao);
    }

    /**
     * {@inheritDoc}
     */
    public function isStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isStatus', []);

        return parent::isStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpresa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpresa', []);

        return parent::getEmpresa();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmpresa($empresa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmpresa', [$empresa]);

        return parent::setEmpresa($empresa);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperadora()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperadora', []);

        return parent::getOperadora();
    }

    /**
     * {@inheritDoc}
     */
    public function setOperadora($operadora)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOperadora', [$operadora]);

        return parent::setOperadora($operadora);
    }

    /**
     * {@inheritDoc}
     */
    public function isNumeroPessoasEmpresas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNumeroPessoasEmpresas', []);

        return parent::isNumeroPessoasEmpresas();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroPessoasEmpresas($numeroPessoasEmpresas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroPessoasEmpresas', [$numeroPessoasEmpresas]);

        return parent::setNumeroPessoasEmpresas($numeroPessoasEmpresas);
    }

    /**
     * {@inheritDoc}
     */
    public function getServico()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServico', []);

        return parent::getServico();
    }

    /**
     * {@inheritDoc}
     */
    public function setServico($servico)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServico', [$servico]);

        return parent::setServico($servico);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroPessoasEmpresas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroPessoasEmpresas', []);

        return parent::getNumeroPessoasEmpresas();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnviarPara()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnviarPara', []);

        return parent::isEnviarPara();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnviarPara($enviarPara)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnviarPara', [$enviarPara]);

        return parent::setEnviarPara($enviarPara);
    }

}
